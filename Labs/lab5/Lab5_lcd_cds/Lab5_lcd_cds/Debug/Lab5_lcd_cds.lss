
Lab5_lcd_cds.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ae8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  00000b3c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000b3c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b6c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  00000bac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e42  00000000  00000000  00000c3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000238  00000000  00000000  00001a7e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000519  00000000  00000000  00001cb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f4  00000000  00000000  000021d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000bc7  00000000  00000000  000023c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003ff  00000000  00000000  00002f8b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  0000338a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
   8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
   c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  10:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  14:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  18:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  1c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  20:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  24:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  28:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  2c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  30:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  34:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  38:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  3c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  40:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  44:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  48:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  4c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  50:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  54:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  58:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  5c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  60:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  64:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  68:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  6c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  70:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  74:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  78:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  7c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  80:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  84:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  88:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  8c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  90:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  94:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  98:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  9c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  ac:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  bc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  cc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  dc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  ec:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  fc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 100:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 104:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 108:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 10c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 110:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 114:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 118:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 11c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 120:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 124:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 128:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 12c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 130:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 134:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 138:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 13c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 140:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 144:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 148:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 14c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 150:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 154:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 158:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 15c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 160:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 164:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 168:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 16c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 170:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 174:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 178:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 17c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 180:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 184:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 188:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 18c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 190:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 194:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 198:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 19c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1ac:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1bc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1cc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1dc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1ec:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_copy_data>:
 214:	10 e2       	ldi	r17, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	e8 ee       	ldi	r30, 0xE8	; 232
 21c:	fa e0       	ldi	r31, 0x0A	; 10
 21e:	00 e0       	ldi	r16, 0x00	; 0
 220:	0b bf       	out	0x3b, r16	; 59
 222:	02 c0       	rjmp	.+4      	; 0x228 <__do_copy_data+0x14>
 224:	07 90       	elpm	r0, Z+
 226:	0d 92       	st	X+, r0
 228:	a0 30       	cpi	r26, 0x00	; 0
 22a:	b1 07       	cpc	r27, r17
 22c:	d9 f7       	brne	.-10     	; 0x224 <__do_copy_data+0x10>
 22e:	1b be       	out	0x3b, r1	; 59
 230:	0e 94 65 03 	call	0x6ca	; 0x6ca <main>
 234:	0c 94 72 05 	jmp	0xae4	; 0xae4 <_exit>

00000238 <__bad_interrupt>:
 238:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000023c <ebi_init>:
uint16_t adc_pot(void) 
{
	while (!ADCB.CH0.INTFLAGS);
	ADCB.CH0.INTFLAGS = 0x01;
	return ADCB.CH0.RES;
}
 23c:	cf 93       	push	r28
 23e:	df 93       	push	r29
 240:	cd b7       	in	r28, 0x3d	; 61
 242:	de b7       	in	r29, 0x3e	; 62
 244:	80 ee       	ldi	r24, 0xE0	; 224
 246:	96 e0       	ldi	r25, 0x06	; 6
 248:	27 e3       	ldi	r18, 0x37	; 55
 24a:	fc 01       	movw	r30, r24
 24c:	20 83       	st	Z, r18
 24e:	80 ee       	ldi	r24, 0xE0	; 224
 250:	96 e0       	ldi	r25, 0x06	; 6
 252:	23 e3       	ldi	r18, 0x33	; 51
 254:	fc 01       	movw	r30, r24
 256:	24 83       	std	Z+4, r18	; 0x04
 258:	80 e2       	ldi	r24, 0x20	; 32
 25a:	97 e0       	ldi	r25, 0x07	; 7
 25c:	2f ef       	ldi	r18, 0xFF	; 255
 25e:	fc 01       	movw	r30, r24
 260:	20 83       	st	Z, r18
 262:	80 e4       	ldi	r24, 0x40	; 64
 264:	94 e0       	ldi	r25, 0x04	; 4
 266:	21 e0       	ldi	r18, 0x01	; 1
 268:	fc 01       	movw	r30, r24
 26a:	20 83       	st	Z, r18
 26c:	80 e4       	ldi	r24, 0x40	; 64
 26e:	94 e0       	ldi	r25, 0x04	; 4
 270:	28 e2       	ldi	r18, 0x28	; 40
 272:	fc 01       	movw	r30, r24
 274:	23 8b       	std	Z+19, r18	; 0x13
 276:	80 e4       	ldi	r24, 0x40	; 64
 278:	94 e0       	ldi	r25, 0x04	; 4
 27a:	20 e8       	ldi	r18, 0x80	; 128
 27c:	fc 01       	movw	r30, r24
 27e:	22 8b       	std	Z+18, r18	; 0x12
 280:	80 e4       	ldi	r24, 0x40	; 64
 282:	94 e0       	ldi	r25, 0x04	; 4
 284:	25 e1       	ldi	r18, 0x15	; 21
 286:	fc 01       	movw	r30, r24
 288:	20 8b       	std	Z+16, r18	; 0x10
 28a:	80 e4       	ldi	r24, 0x40	; 64
 28c:	94 e0       	ldi	r25, 0x04	; 4
 28e:	20 e4       	ldi	r18, 0x40	; 64
 290:	39 e3       	ldi	r19, 0x39	; 57
 292:	fc 01       	movw	r30, r24
 294:	26 8b       	std	Z+22, r18	; 0x16
 296:	37 8b       	std	Z+23, r19	; 0x17
 298:	80 e4       	ldi	r24, 0x40	; 64
 29a:	94 e0       	ldi	r25, 0x04	; 4
 29c:	29 e1       	ldi	r18, 0x19	; 25
 29e:	fc 01       	movw	r30, r24
 2a0:	24 8b       	std	Z+20, r18	; 0x14
 2a2:	df 91       	pop	r29
 2a4:	cf 91       	pop	r28
 2a6:	08 95       	ret

000002a8 <adc_init>:
 2a8:	cf 93       	push	r28
 2aa:	df 93       	push	r29
 2ac:	cd b7       	in	r28, 0x3d	; 61
 2ae:	de b7       	in	r29, 0x3e	; 62
 2b0:	80 e4       	ldi	r24, 0x40	; 64
 2b2:	92 e0       	ldi	r25, 0x02	; 2
 2b4:	28 e1       	ldi	r18, 0x18	; 24
 2b6:	fc 01       	movw	r30, r24
 2b8:	21 83       	std	Z+1, r18	; 0x01
 2ba:	80 e4       	ldi	r24, 0x40	; 64
 2bc:	92 e0       	ldi	r25, 0x02	; 2
 2be:	20 e3       	ldi	r18, 0x30	; 48
 2c0:	fc 01       	movw	r30, r24
 2c2:	22 83       	std	Z+2, r18	; 0x02
 2c4:	80 e4       	ldi	r24, 0x40	; 64
 2c6:	92 e0       	ldi	r25, 0x02	; 2
 2c8:	fc 01       	movw	r30, r24
 2ca:	14 82       	std	Z+4, r1	; 0x04
 2cc:	80 e4       	ldi	r24, 0x40	; 64
 2ce:	92 e0       	ldi	r25, 0x02	; 2
 2d0:	22 e4       	ldi	r18, 0x42	; 66
 2d2:	fc 01       	movw	r30, r24
 2d4:	23 83       	std	Z+3, r18	; 0x03
 2d6:	80 e4       	ldi	r24, 0x40	; 64
 2d8:	92 e0       	ldi	r25, 0x02	; 2
 2da:	20 e2       	ldi	r18, 0x20	; 32
 2dc:	fc 01       	movw	r30, r24
 2de:	21 a3       	std	Z+33, r18	; 0x21
 2e0:	80 e4       	ldi	r24, 0x40	; 64
 2e2:	92 e0       	ldi	r25, 0x02	; 2
 2e4:	21 e0       	ldi	r18, 0x01	; 1
 2e6:	fc 01       	movw	r30, r24
 2e8:	22 a3       	std	Z+34, r18	; 0x22
 2ea:	80 e4       	ldi	r24, 0x40	; 64
 2ec:	92 e0       	ldi	r25, 0x02	; 2
 2ee:	21 e0       	ldi	r18, 0x01	; 1
 2f0:	fc 01       	movw	r30, r24
 2f2:	20 a3       	std	Z+32, r18	; 0x20
 2f4:	80 e4       	ldi	r24, 0x40	; 64
 2f6:	92 e0       	ldi	r25, 0x02	; 2
 2f8:	28 e2       	ldi	r18, 0x28	; 40
 2fa:	fc 01       	movw	r30, r24
 2fc:	21 a7       	std	Z+41, r18	; 0x29
 2fe:	80 e4       	ldi	r24, 0x40	; 64
 300:	92 e0       	ldi	r25, 0x02	; 2
 302:	21 e0       	ldi	r18, 0x01	; 1
 304:	fc 01       	movw	r30, r24
 306:	22 a7       	std	Z+42, r18	; 0x2a
 308:	80 e4       	ldi	r24, 0x40	; 64
 30a:	92 e0       	ldi	r25, 0x02	; 2
 30c:	21 e0       	ldi	r18, 0x01	; 1
 30e:	fc 01       	movw	r30, r24
 310:	20 a7       	std	Z+40, r18	; 0x28
 312:	80 e4       	ldi	r24, 0x40	; 64
 314:	92 e0       	ldi	r25, 0x02	; 2
 316:	2d e0       	ldi	r18, 0x0D	; 13
 318:	fc 01       	movw	r30, r24
 31a:	20 83       	st	Z, r18
 31c:	80 e2       	ldi	r24, 0x20	; 32
 31e:	96 e0       	ldi	r25, 0x06	; 6
 320:	23 e3       	ldi	r18, 0x33	; 51
 322:	fc 01       	movw	r30, r24
 324:	22 83       	std	Z+2, r18	; 0x02
 326:	df 91       	pop	r29
 328:	cf 91       	pop	r28
 32a:	08 95       	ret

0000032c <lcd_init>:
 32c:	cf 93       	push	r28
 32e:	df 93       	push	r29
 330:	cd b7       	in	r28, 0x3d	; 61
 332:	de b7       	in	r29, 0x3e	; 62
 334:	2c 97       	sbiw	r28, 0x0c	; 12
 336:	cd bf       	out	0x3d, r28	; 61
 338:	de bf       	out	0x3e, r29	; 62
 33a:	0e 94 e7 01 	call	0x3ce	; 0x3ce <wait_busy>
 33e:	80 e0       	ldi	r24, 0x00	; 0
 340:	90 e5       	ldi	r25, 0x50	; 80
 342:	a9 e3       	ldi	r26, 0x39	; 57
 344:	b0 e0       	ldi	r27, 0x00	; 0
 346:	89 83       	std	Y+1, r24	; 0x01
 348:	9a 83       	std	Y+2, r25	; 0x02
 34a:	ab 83       	std	Y+3, r26	; 0x03
 34c:	bc 83       	std	Y+4, r27	; 0x04
 34e:	89 81       	ldd	r24, Y+1	; 0x01
 350:	9a 81       	ldd	r25, Y+2	; 0x02
 352:	ab 81       	ldd	r26, Y+3	; 0x03
 354:	bc 81       	ldd	r27, Y+4	; 0x04
 356:	28 e3       	ldi	r18, 0x38	; 56
 358:	0b b6       	in	r0, 0x3b	; 59
 35a:	ab bf       	out	0x3b, r26	; 59
 35c:	fc 01       	movw	r30, r24
 35e:	20 83       	st	Z, r18
 360:	0b be       	out	0x3b, r0	; 59
 362:	00 00       	nop
 364:	00 00       	nop
 366:	0e 94 e7 01 	call	0x3ce	; 0x3ce <wait_busy>
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	90 e5       	ldi	r25, 0x50	; 80
 36e:	a9 e3       	ldi	r26, 0x39	; 57
 370:	b0 e0       	ldi	r27, 0x00	; 0
 372:	8d 83       	std	Y+5, r24	; 0x05
 374:	9e 83       	std	Y+6, r25	; 0x06
 376:	af 83       	std	Y+7, r26	; 0x07
 378:	b8 87       	std	Y+8, r27	; 0x08
 37a:	8d 81       	ldd	r24, Y+5	; 0x05
 37c:	9e 81       	ldd	r25, Y+6	; 0x06
 37e:	af 81       	ldd	r26, Y+7	; 0x07
 380:	b8 85       	ldd	r27, Y+8	; 0x08
 382:	2f e0       	ldi	r18, 0x0F	; 15
 384:	0b b6       	in	r0, 0x3b	; 59
 386:	ab bf       	out	0x3b, r26	; 59
 388:	fc 01       	movw	r30, r24
 38a:	20 83       	st	Z, r18
 38c:	0b be       	out	0x3b, r0	; 59
 38e:	00 00       	nop
 390:	00 00       	nop
 392:	0e 94 e7 01 	call	0x3ce	; 0x3ce <wait_busy>
 396:	80 e0       	ldi	r24, 0x00	; 0
 398:	90 e5       	ldi	r25, 0x50	; 80
 39a:	a9 e3       	ldi	r26, 0x39	; 57
 39c:	b0 e0       	ldi	r27, 0x00	; 0
 39e:	89 87       	std	Y+9, r24	; 0x09
 3a0:	9a 87       	std	Y+10, r25	; 0x0a
 3a2:	ab 87       	std	Y+11, r26	; 0x0b
 3a4:	bc 87       	std	Y+12, r27	; 0x0c
 3a6:	89 85       	ldd	r24, Y+9	; 0x09
 3a8:	9a 85       	ldd	r25, Y+10	; 0x0a
 3aa:	ab 85       	ldd	r26, Y+11	; 0x0b
 3ac:	bc 85       	ldd	r27, Y+12	; 0x0c
 3ae:	21 e0       	ldi	r18, 0x01	; 1
 3b0:	0b b6       	in	r0, 0x3b	; 59
 3b2:	ab bf       	out	0x3b, r26	; 59
 3b4:	fc 01       	movw	r30, r24
 3b6:	20 83       	st	Z, r18
 3b8:	0b be       	out	0x3b, r0	; 59
 3ba:	00 00       	nop
 3bc:	00 00       	nop
 3be:	0e 94 e7 01 	call	0x3ce	; 0x3ce <wait_busy>
 3c2:	2c 96       	adiw	r28, 0x0c	; 12
 3c4:	cd bf       	out	0x3d, r28	; 61
 3c6:	de bf       	out	0x3e, r29	; 62
 3c8:	df 91       	pop	r29
 3ca:	cf 91       	pop	r28
 3cc:	08 95       	ret

000003ce <wait_busy>:
 3ce:	cf 93       	push	r28
 3d0:	df 93       	push	r29
 3d2:	00 d0       	rcall	.+0      	; 0x3d4 <wait_busy+0x6>
 3d4:	00 d0       	rcall	.+0      	; 0x3d6 <wait_busy+0x8>
 3d6:	cd b7       	in	r28, 0x3d	; 61
 3d8:	de b7       	in	r29, 0x3e	; 62
 3da:	19 82       	std	Y+1, r1	; 0x01
 3dc:	80 e0       	ldi	r24, 0x00	; 0
 3de:	90 e5       	ldi	r25, 0x50	; 80
 3e0:	a9 e3       	ldi	r26, 0x39	; 57
 3e2:	b0 e0       	ldi	r27, 0x00	; 0
 3e4:	8a 83       	std	Y+2, r24	; 0x02
 3e6:	9b 83       	std	Y+3, r25	; 0x03
 3e8:	ac 83       	std	Y+4, r26	; 0x04
 3ea:	bd 83       	std	Y+5, r27	; 0x05
 3ec:	8a 81       	ldd	r24, Y+2	; 0x02
 3ee:	9b 81       	ldd	r25, Y+3	; 0x03
 3f0:	ac 81       	ldd	r26, Y+4	; 0x04
 3f2:	bd 81       	ldd	r27, Y+5	; 0x05
 3f4:	0b b6       	in	r0, 0x3b	; 59
 3f6:	ab bf       	out	0x3b, r26	; 59
 3f8:	fc 01       	movw	r30, r24
 3fa:	80 81       	ld	r24, Z
 3fc:	0b be       	out	0x3b, r0	; 59
 3fe:	8e 83       	std	Y+6, r24	; 0x06
 400:	8e 81       	ldd	r24, Y+6	; 0x06
 402:	89 83       	std	Y+1, r24	; 0x01
 404:	89 81       	ldd	r24, Y+1	; 0x01
 406:	88 23       	and	r24, r24
 408:	4c f3       	brlt	.-46     	; 0x3dc <wait_busy+0xe>
 40a:	26 96       	adiw	r28, 0x06	; 6
 40c:	cd bf       	out	0x3d, r28	; 61
 40e:	de bf       	out	0x3e, r29	; 62
 410:	df 91       	pop	r29
 412:	cf 91       	pop	r28
 414:	08 95       	ret

00000416 <OUT_CHAR>:
 416:	cf 93       	push	r28
 418:	df 93       	push	r29
 41a:	cd b7       	in	r28, 0x3d	; 61
 41c:	de b7       	in	r29, 0x3e	; 62
 41e:	25 97       	sbiw	r28, 0x05	; 5
 420:	cd bf       	out	0x3d, r28	; 61
 422:	de bf       	out	0x3e, r29	; 62
 424:	8d 83       	std	Y+5, r24	; 0x05
 426:	0e 94 e7 01 	call	0x3ce	; 0x3ce <wait_busy>
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	90 e5       	ldi	r25, 0x50	; 80
 42e:	a9 e3       	ldi	r26, 0x39	; 57
 430:	b0 e0       	ldi	r27, 0x00	; 0
 432:	89 83       	std	Y+1, r24	; 0x01
 434:	9a 83       	std	Y+2, r25	; 0x02
 436:	ab 83       	std	Y+3, r26	; 0x03
 438:	bc 83       	std	Y+4, r27	; 0x04
 43a:	89 81       	ldd	r24, Y+1	; 0x01
 43c:	9a 81       	ldd	r25, Y+2	; 0x02
 43e:	ab 81       	ldd	r26, Y+3	; 0x03
 440:	bc 81       	ldd	r27, Y+4	; 0x04
 442:	2d 81       	ldd	r18, Y+5	; 0x05
 444:	0b b6       	in	r0, 0x3b	; 59
 446:	ab bf       	out	0x3b, r26	; 59
 448:	fc 01       	movw	r30, r24
 44a:	20 83       	st	Z, r18
 44c:	0b be       	out	0x3b, r0	; 59
 44e:	00 00       	nop
 450:	00 00       	nop
 452:	0e 94 e7 01 	call	0x3ce	; 0x3ce <wait_busy>
 456:	25 96       	adiw	r28, 0x05	; 5
 458:	cd bf       	out	0x3d, r28	; 61
 45a:	de bf       	out	0x3e, r29	; 62
 45c:	df 91       	pop	r29
 45e:	cf 91       	pop	r28
 460:	08 95       	ret

00000462 <OUT_STRING>:
 462:	cf 93       	push	r28
 464:	df 93       	push	r29
 466:	1f 92       	push	r1
 468:	1f 92       	push	r1
 46a:	cd b7       	in	r28, 0x3d	; 61
 46c:	de b7       	in	r29, 0x3e	; 62
 46e:	89 83       	std	Y+1, r24	; 0x01
 470:	9a 83       	std	Y+2, r25	; 0x02
 472:	0b c0       	rjmp	.+22     	; 0x48a <OUT_STRING+0x28>
 474:	89 81       	ldd	r24, Y+1	; 0x01
 476:	9a 81       	ldd	r25, Y+2	; 0x02
 478:	fc 01       	movw	r30, r24
 47a:	80 81       	ld	r24, Z
 47c:	0e 94 0b 02 	call	0x416	; 0x416 <OUT_CHAR>
 480:	89 81       	ldd	r24, Y+1	; 0x01
 482:	9a 81       	ldd	r25, Y+2	; 0x02
 484:	01 96       	adiw	r24, 0x01	; 1
 486:	89 83       	std	Y+1, r24	; 0x01
 488:	9a 83       	std	Y+2, r25	; 0x02
 48a:	89 81       	ldd	r24, Y+1	; 0x01
 48c:	9a 81       	ldd	r25, Y+2	; 0x02
 48e:	fc 01       	movw	r30, r24
 490:	80 81       	ld	r24, Z
 492:	88 23       	and	r24, r24
 494:	79 f7       	brne	.-34     	; 0x474 <OUT_STRING+0x12>
 496:	0f 90       	pop	r0
 498:	0f 90       	pop	r0
 49a:	df 91       	pop	r29
 49c:	cf 91       	pop	r28
 49e:	08 95       	ret

000004a0 <CLEAR_SCREEN>:
 4a0:	cf 93       	push	r28
 4a2:	df 93       	push	r29
 4a4:	00 d0       	rcall	.+0      	; 0x4a6 <CLEAR_SCREEN+0x6>
 4a6:	1f 92       	push	r1
 4a8:	cd b7       	in	r28, 0x3d	; 61
 4aa:	de b7       	in	r29, 0x3e	; 62
 4ac:	0e 94 e7 01 	call	0x3ce	; 0x3ce <wait_busy>
 4b0:	80 e0       	ldi	r24, 0x00	; 0
 4b2:	90 e5       	ldi	r25, 0x50	; 80
 4b4:	a9 e3       	ldi	r26, 0x39	; 57
 4b6:	b0 e0       	ldi	r27, 0x00	; 0
 4b8:	89 83       	std	Y+1, r24	; 0x01
 4ba:	9a 83       	std	Y+2, r25	; 0x02
 4bc:	ab 83       	std	Y+3, r26	; 0x03
 4be:	bc 83       	std	Y+4, r27	; 0x04
 4c0:	89 81       	ldd	r24, Y+1	; 0x01
 4c2:	9a 81       	ldd	r25, Y+2	; 0x02
 4c4:	ab 81       	ldd	r26, Y+3	; 0x03
 4c6:	bc 81       	ldd	r27, Y+4	; 0x04
 4c8:	21 e0       	ldi	r18, 0x01	; 1
 4ca:	0b b6       	in	r0, 0x3b	; 59
 4cc:	ab bf       	out	0x3b, r26	; 59
 4ce:	fc 01       	movw	r30, r24
 4d0:	20 83       	st	Z, r18
 4d2:	0b be       	out	0x3b, r0	; 59
 4d4:	00 00       	nop
 4d6:	00 00       	nop
 4d8:	0e 94 e7 01 	call	0x3ce	; 0x3ce <wait_busy>
 4dc:	24 96       	adiw	r28, 0x04	; 4
 4de:	cd bf       	out	0x3d, r28	; 61
 4e0:	de bf       	out	0x3e, r29	; 62
 4e2:	df 91       	pop	r29
 4e4:	cf 91       	pop	r28
 4e6:	08 95       	ret

000004e8 <lcd_voltage>:

void lcd_voltage(uint16_t volt)
{
 4e8:	cf 93       	push	r28
 4ea:	df 93       	push	r29
 4ec:	cd b7       	in	r28, 0x3d	; 61
 4ee:	de b7       	in	r29, 0x3e	; 62
 4f0:	a6 97       	sbiw	r28, 0x26	; 38
 4f2:	cd bf       	out	0x3d, r28	; 61
 4f4:	de bf       	out	0x3e, r29	; 62
 4f6:	8d a3       	std	Y+37, r24	; 0x25
 4f8:	9e a3       	std	Y+38, r25	; 0x26
	CLEAR_SCREEN();
 4fa:	0e 94 50 02 	call	0x4a0	; 0x4a0 <CLEAR_SCREEN>
	
	// Convert ADC value to Decimal Voltage
	volt = volt & 0x07FF;					// We can assume positive, so ignore sign bit.
 4fe:	8d a1       	ldd	r24, Y+37	; 0x25
 500:	9e a1       	ldd	r25, Y+38	; 0x26
 502:	97 70       	andi	r25, 0x07	; 7
 504:	8d a3       	std	Y+37, r24	; 0x25
 506:	9e a3       	std	Y+38, r25	; 0x26
	volt *= 2;								// Multiply by 2 to account for ADC /2
 508:	8d a1       	ldd	r24, Y+37	; 0x25
 50a:	9e a1       	ldd	r25, Y+38	; 0x26
 50c:	88 0f       	add	r24, r24
 50e:	99 1f       	adc	r25, r25
 510:	8d a3       	std	Y+37, r24	; 0x25
 512:	9e a3       	std	Y+38, r25	; 0x26
	float dec_volt = ADC_RATIO*volt;		// Apply formula. 
 514:	8d a1       	ldd	r24, Y+37	; 0x25
 516:	9e a1       	ldd	r25, Y+38	; 0x26
 518:	cc 01       	movw	r24, r24
 51a:	a0 e0       	ldi	r26, 0x00	; 0
 51c:	b0 e0       	ldi	r27, 0x00	; 0
 51e:	bc 01       	movw	r22, r24
 520:	cd 01       	movw	r24, r26
 522:	0e 94 77 04 	call	0x8ee	; 0x8ee <__floatunsisf>
 526:	dc 01       	movw	r26, r24
 528:	cb 01       	movw	r24, r22
 52a:	26 ef       	ldi	r18, 0xF6	; 246
 52c:	39 e0       	ldi	r19, 0x09	; 9
 52e:	40 ea       	ldi	r20, 0xA0	; 160
 530:	5a e3       	ldi	r21, 0x3A	; 58
 532:	bc 01       	movw	r22, r24
 534:	cd 01       	movw	r24, r26
 536:	0e 94 05 05 	call	0xa0a	; 0xa0a <__mulsf3>
 53a:	dc 01       	movw	r26, r24
 53c:	cb 01       	movw	r24, r22
 53e:	89 83       	std	Y+1, r24	; 0x01
 540:	9a 83       	std	Y+2, r25	; 0x02
 542:	ab 83       	std	Y+3, r26	; 0x03
 544:	bc 83       	std	Y+4, r27	; 0x04
	
	uint8_t int1, int2, int3, h1, h2, h3;
	char d1, d2, d3;
	float volt2, volt3;
	
	int1 = (uint8_t) dec_volt;				// Determine Decimal representation
 546:	69 81       	ldd	r22, Y+1	; 0x01
 548:	7a 81       	ldd	r23, Y+2	; 0x02
 54a:	8b 81       	ldd	r24, Y+3	; 0x03
 54c:	9c 81       	ldd	r25, Y+4	; 0x04
 54e:	0e 94 48 04 	call	0x890	; 0x890 <__fixunssfsi>
 552:	dc 01       	movw	r26, r24
 554:	cb 01       	movw	r24, r22
 556:	8d 83       	std	Y+5, r24	; 0x05
	d1 = (char) (int1 + '0');
 558:	8d 81       	ldd	r24, Y+5	; 0x05
 55a:	80 5d       	subi	r24, 0xD0	; 208
 55c:	8e 83       	std	Y+6, r24	; 0x06
	volt2 = 10*(dec_volt - int1);
 55e:	8d 81       	ldd	r24, Y+5	; 0x05
 560:	88 2f       	mov	r24, r24
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	09 2e       	mov	r0, r25
 566:	00 0c       	add	r0, r0
 568:	aa 0b       	sbc	r26, r26
 56a:	bb 0b       	sbc	r27, r27
 56c:	bc 01       	movw	r22, r24
 56e:	cd 01       	movw	r24, r26
 570:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__floatsisf>
 574:	dc 01       	movw	r26, r24
 576:	cb 01       	movw	r24, r22
 578:	9c 01       	movw	r18, r24
 57a:	ad 01       	movw	r20, r26
 57c:	69 81       	ldd	r22, Y+1	; 0x01
 57e:	7a 81       	ldd	r23, Y+2	; 0x02
 580:	8b 81       	ldd	r24, Y+3	; 0x03
 582:	9c 81       	ldd	r25, Y+4	; 0x04
 584:	0e 94 db 03 	call	0x7b6	; 0x7b6 <__subsf3>
 588:	dc 01       	movw	r26, r24
 58a:	cb 01       	movw	r24, r22
 58c:	20 e0       	ldi	r18, 0x00	; 0
 58e:	30 e0       	ldi	r19, 0x00	; 0
 590:	40 e2       	ldi	r20, 0x20	; 32
 592:	51 e4       	ldi	r21, 0x41	; 65
 594:	bc 01       	movw	r22, r24
 596:	cd 01       	movw	r24, r26
 598:	0e 94 05 05 	call	0xa0a	; 0xa0a <__mulsf3>
 59c:	dc 01       	movw	r26, r24
 59e:	cb 01       	movw	r24, r22
 5a0:	8f 83       	std	Y+7, r24	; 0x07
 5a2:	98 87       	std	Y+8, r25	; 0x08
 5a4:	a9 87       	std	Y+9, r26	; 0x09
 5a6:	ba 87       	std	Y+10, r27	; 0x0a
	int2 = (uint8_t) volt2;
 5a8:	6f 81       	ldd	r22, Y+7	; 0x07
 5aa:	78 85       	ldd	r23, Y+8	; 0x08
 5ac:	89 85       	ldd	r24, Y+9	; 0x09
 5ae:	9a 85       	ldd	r25, Y+10	; 0x0a
 5b0:	0e 94 48 04 	call	0x890	; 0x890 <__fixunssfsi>
 5b4:	dc 01       	movw	r26, r24
 5b6:	cb 01       	movw	r24, r22
 5b8:	8b 87       	std	Y+11, r24	; 0x0b
	d2 = (char) (int2 + '0');
 5ba:	8b 85       	ldd	r24, Y+11	; 0x0b
 5bc:	80 5d       	subi	r24, 0xD0	; 208
 5be:	8c 87       	std	Y+12, r24	; 0x0c
	volt3 = 10*(volt2 - int2);
 5c0:	8b 85       	ldd	r24, Y+11	; 0x0b
 5c2:	88 2f       	mov	r24, r24
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	09 2e       	mov	r0, r25
 5c8:	00 0c       	add	r0, r0
 5ca:	aa 0b       	sbc	r26, r26
 5cc:	bb 0b       	sbc	r27, r27
 5ce:	bc 01       	movw	r22, r24
 5d0:	cd 01       	movw	r24, r26
 5d2:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__floatsisf>
 5d6:	dc 01       	movw	r26, r24
 5d8:	cb 01       	movw	r24, r22
 5da:	9c 01       	movw	r18, r24
 5dc:	ad 01       	movw	r20, r26
 5de:	6f 81       	ldd	r22, Y+7	; 0x07
 5e0:	78 85       	ldd	r23, Y+8	; 0x08
 5e2:	89 85       	ldd	r24, Y+9	; 0x09
 5e4:	9a 85       	ldd	r25, Y+10	; 0x0a
 5e6:	0e 94 db 03 	call	0x7b6	; 0x7b6 <__subsf3>
 5ea:	dc 01       	movw	r26, r24
 5ec:	cb 01       	movw	r24, r22
 5ee:	20 e0       	ldi	r18, 0x00	; 0
 5f0:	30 e0       	ldi	r19, 0x00	; 0
 5f2:	40 e2       	ldi	r20, 0x20	; 32
 5f4:	51 e4       	ldi	r21, 0x41	; 65
 5f6:	bc 01       	movw	r22, r24
 5f8:	cd 01       	movw	r24, r26
 5fa:	0e 94 05 05 	call	0xa0a	; 0xa0a <__mulsf3>
 5fe:	dc 01       	movw	r26, r24
 600:	cb 01       	movw	r24, r22
 602:	8d 87       	std	Y+13, r24	; 0x0d
 604:	9e 87       	std	Y+14, r25	; 0x0e
 606:	af 87       	std	Y+15, r26	; 0x0f
 608:	b8 8b       	std	Y+16, r27	; 0x10
	int3 = (uint8_t) volt3;
 60a:	6d 85       	ldd	r22, Y+13	; 0x0d
 60c:	7e 85       	ldd	r23, Y+14	; 0x0e
 60e:	8f 85       	ldd	r24, Y+15	; 0x0f
 610:	98 89       	ldd	r25, Y+16	; 0x10
 612:	0e 94 48 04 	call	0x890	; 0x890 <__fixunssfsi>
 616:	dc 01       	movw	r26, r24
 618:	cb 01       	movw	r24, r22
 61a:	89 8b       	std	Y+17, r24	; 0x11
	d3 = (char) (int3 + '0');
 61c:	89 89       	ldd	r24, Y+17	; 0x11
 61e:	80 5d       	subi	r24, 0xD0	; 208
 620:	8a 8b       	std	Y+18, r24	; 0x12
	
	h1 = conv_nibble(volt>>8);				// Obtain ASCII for Hex representation
 622:	8d a1       	ldd	r24, Y+37	; 0x25
 624:	9e a1       	ldd	r25, Y+38	; 0x26
 626:	89 2f       	mov	r24, r25
 628:	99 27       	eor	r25, r25
 62a:	0e 94 50 03 	call	0x6a0	; 0x6a0 <conv_nibble>
 62e:	8b 8b       	std	Y+19, r24	; 0x13
	h2 = conv_nibble(volt>>4 & 0x0F);
 630:	8d a1       	ldd	r24, Y+37	; 0x25
 632:	9e a1       	ldd	r25, Y+38	; 0x26
 634:	92 95       	swap	r25
 636:	82 95       	swap	r24
 638:	8f 70       	andi	r24, 0x0F	; 15
 63a:	89 27       	eor	r24, r25
 63c:	9f 70       	andi	r25, 0x0F	; 15
 63e:	89 27       	eor	r24, r25
 640:	8f 70       	andi	r24, 0x0F	; 15
 642:	0e 94 50 03 	call	0x6a0	; 0x6a0 <conv_nibble>
 646:	8c 8b       	std	Y+20, r24	; 0x14
	h3 = conv_nibble(volt & 0x0F);
 648:	8d a1       	ldd	r24, Y+37	; 0x25
 64a:	8f 70       	andi	r24, 0x0F	; 15
 64c:	0e 94 50 03 	call	0x6a0	; 0x6a0 <conv_nibble>
 650:	8d 8b       	std	Y+21, r24	; 0x15
	
	char string[] = {d1, '.', d2, d3, ' ', 'V', ' ', '(', '0', 'x', h1, h2, h3, ')', '\0'};
 652:	8e 81       	ldd	r24, Y+6	; 0x06
 654:	8e 8b       	std	Y+22, r24	; 0x16
 656:	8e e2       	ldi	r24, 0x2E	; 46
 658:	8f 8b       	std	Y+23, r24	; 0x17
 65a:	8c 85       	ldd	r24, Y+12	; 0x0c
 65c:	88 8f       	std	Y+24, r24	; 0x18
 65e:	8a 89       	ldd	r24, Y+18	; 0x12
 660:	89 8f       	std	Y+25, r24	; 0x19
 662:	80 e2       	ldi	r24, 0x20	; 32
 664:	8a 8f       	std	Y+26, r24	; 0x1a
 666:	86 e5       	ldi	r24, 0x56	; 86
 668:	8b 8f       	std	Y+27, r24	; 0x1b
 66a:	80 e2       	ldi	r24, 0x20	; 32
 66c:	8c 8f       	std	Y+28, r24	; 0x1c
 66e:	88 e2       	ldi	r24, 0x28	; 40
 670:	8d 8f       	std	Y+29, r24	; 0x1d
 672:	80 e3       	ldi	r24, 0x30	; 48
 674:	8e 8f       	std	Y+30, r24	; 0x1e
 676:	88 e7       	ldi	r24, 0x78	; 120
 678:	8f 8f       	std	Y+31, r24	; 0x1f
 67a:	8b 89       	ldd	r24, Y+19	; 0x13
 67c:	88 a3       	std	Y+32, r24	; 0x20
 67e:	8c 89       	ldd	r24, Y+20	; 0x14
 680:	89 a3       	std	Y+33, r24	; 0x21
 682:	8d 89       	ldd	r24, Y+21	; 0x15
 684:	8a a3       	std	Y+34, r24	; 0x22
 686:	89 e2       	ldi	r24, 0x29	; 41
 688:	8b a3       	std	Y+35, r24	; 0x23
 68a:	1c a2       	std	Y+36, r1	; 0x24
	OUT_STRING(string);						// Output Voltmeter reading
 68c:	ce 01       	movw	r24, r28
 68e:	46 96       	adiw	r24, 0x16	; 22
 690:	0e 94 31 02 	call	0x462	; 0x462 <OUT_STRING>
}
 694:	a6 96       	adiw	r28, 0x26	; 38
 696:	cd bf       	out	0x3d, r28	; 61
 698:	de bf       	out	0x3e, r29	; 62
 69a:	df 91       	pop	r29
 69c:	cf 91       	pop	r28
 69e:	08 95       	ret

000006a0 <conv_nibble>:

uint8_t conv_nibble(uint8_t nib)
{
 6a0:	cf 93       	push	r28
 6a2:	df 93       	push	r29
 6a4:	1f 92       	push	r1
 6a6:	cd b7       	in	r28, 0x3d	; 61
 6a8:	de b7       	in	r29, 0x3e	; 62
 6aa:	89 83       	std	Y+1, r24	; 0x01
	if (nib < 0xA)
 6ac:	89 81       	ldd	r24, Y+1	; 0x01
 6ae:	8a 30       	cpi	r24, 0x0A	; 10
 6b0:	20 f4       	brcc	.+8      	; 0x6ba <conv_nibble+0x1a>
	{
		nib += '0';							// Offset by ASCII '0'
 6b2:	89 81       	ldd	r24, Y+1	; 0x01
 6b4:	80 5d       	subi	r24, 0xD0	; 208
 6b6:	89 83       	std	Y+1, r24	; 0x01
 6b8:	03 c0       	rjmp	.+6      	; 0x6c0 <conv_nibble+0x20>
	} else
	{
		nib += 'A' - 0xA;					// Subtract out 0xA so that 0xA => 0, 0xB => 1, etc., then offset by ASCII 'A'
 6ba:	89 81       	ldd	r24, Y+1	; 0x01
 6bc:	89 5c       	subi	r24, 0xC9	; 201
 6be:	89 83       	std	Y+1, r24	; 0x01
	}
	return nib;
 6c0:	89 81       	ldd	r24, Y+1	; 0x01
 6c2:	0f 90       	pop	r0
 6c4:	df 91       	pop	r29
 6c6:	cf 91       	pop	r28
 6c8:	08 95       	ret

000006ca <main>:
uint16_t cds(void);
void rough_delay(void);

///////////////////////////////////MAIN FUNCTION/////////////////////////////////////
int main(void)
{
 6ca:	cf 93       	push	r28
 6cc:	df 93       	push	r29
 6ce:	cd b7       	in	r28, 0x3d	; 61
 6d0:	de b7       	in	r29, 0x3e	; 62
	ebi_init();
 6d2:	0e 94 1e 01 	call	0x23c	; 0x23c <ebi_init>
	adc_init();
 6d6:	0e 94 54 01 	call	0x2a8	; 0x2a8 <adc_init>
	lcd_init();
 6da:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_init>
	while (1)
	{
		lcd_voltage(cds());
 6de:	0e 94 76 03 	call	0x6ec	; 0x6ec <cds>
 6e2:	0e 94 74 02 	call	0x4e8	; 0x4e8 <lcd_voltage>
		rough_delay();
 6e6:	0e 94 c2 03 	call	0x784	; 0x784 <rough_delay>
	}
 6ea:	f9 cf       	rjmp	.-14     	; 0x6de <main+0x14>

000006ec <cds>:
}

/////////////////////////////////////FUNCTIONS///////////////////////////////////////
uint16_t cds(void)
{
 6ec:	cf 93       	push	r28
 6ee:	df 93       	push	r29
 6f0:	cd b7       	in	r28, 0x3d	; 61
 6f2:	de b7       	in	r29, 0x3e	; 62
 6f4:	28 97       	sbiw	r28, 0x08	; 8
 6f6:	cd bf       	out	0x3d, r28	; 61
 6f8:	de bf       	out	0x3e, r29	; 62
	while (!ADCB.CH1.INTFLAGS);
 6fa:	00 00       	nop
 6fc:	80 e4       	ldi	r24, 0x40	; 64
 6fe:	92 e0       	ldi	r25, 0x02	; 2
 700:	fc 01       	movw	r30, r24
 702:	83 a5       	ldd	r24, Z+43	; 0x2b
 704:	88 23       	and	r24, r24
 706:	d1 f3       	breq	.-12     	; 0x6fc <cds+0x10>
	ADCB.CH1.INTFLAGS = 0x01;
 708:	80 e4       	ldi	r24, 0x40	; 64
 70a:	92 e0       	ldi	r25, 0x02	; 2
 70c:	21 e0       	ldi	r18, 0x01	; 1
 70e:	fc 01       	movw	r30, r24
 710:	23 a7       	std	Z+43, r18	; 0x2b
	if (ADCB.CH1.RES < 256)
 712:	80 e4       	ldi	r24, 0x40	; 64
 714:	92 e0       	ldi	r25, 0x02	; 2
 716:	fc 01       	movw	r30, r24
 718:	84 a5       	ldd	r24, Z+44	; 0x2c
 71a:	95 a5       	ldd	r25, Z+45	; 0x2d
 71c:	8f 3f       	cpi	r24, 0xFF	; 255
 71e:	91 05       	cpc	r25, r1
 720:	09 f0       	breq	.+2      	; 0x724 <cds+0x38>
 722:	98 f4       	brcc	.+38     	; 0x74a <cds+0x5e>
	{
		__far_mem_write(CS0_Start, 0x01);
 724:	80 e0       	ldi	r24, 0x00	; 0
 726:	90 e8       	ldi	r25, 0x80	; 128
 728:	a8 e2       	ldi	r26, 0x28	; 40
 72a:	b0 e0       	ldi	r27, 0x00	; 0
 72c:	89 83       	std	Y+1, r24	; 0x01
 72e:	9a 83       	std	Y+2, r25	; 0x02
 730:	ab 83       	std	Y+3, r26	; 0x03
 732:	bc 83       	std	Y+4, r27	; 0x04
 734:	89 81       	ldd	r24, Y+1	; 0x01
 736:	9a 81       	ldd	r25, Y+2	; 0x02
 738:	ab 81       	ldd	r26, Y+3	; 0x03
 73a:	bc 81       	ldd	r27, Y+4	; 0x04
 73c:	21 e0       	ldi	r18, 0x01	; 1
 73e:	0b b6       	in	r0, 0x3b	; 59
 740:	ab bf       	out	0x3b, r26	; 59
 742:	fc 01       	movw	r30, r24
 744:	20 83       	st	Z, r18
 746:	0b be       	out	0x3b, r0	; 59
 748:	12 c0       	rjmp	.+36     	; 0x76e <cds+0x82>
	} else
	{
		__far_mem_write(CS0_Start, 0x00);
 74a:	80 e0       	ldi	r24, 0x00	; 0
 74c:	90 e8       	ldi	r25, 0x80	; 128
 74e:	a8 e2       	ldi	r26, 0x28	; 40
 750:	b0 e0       	ldi	r27, 0x00	; 0
 752:	8d 83       	std	Y+5, r24	; 0x05
 754:	9e 83       	std	Y+6, r25	; 0x06
 756:	af 83       	std	Y+7, r26	; 0x07
 758:	b8 87       	std	Y+8, r27	; 0x08
 75a:	8d 81       	ldd	r24, Y+5	; 0x05
 75c:	9e 81       	ldd	r25, Y+6	; 0x06
 75e:	af 81       	ldd	r26, Y+7	; 0x07
 760:	b8 85       	ldd	r27, Y+8	; 0x08
 762:	20 e0       	ldi	r18, 0x00	; 0
 764:	0b b6       	in	r0, 0x3b	; 59
 766:	ab bf       	out	0x3b, r26	; 59
 768:	fc 01       	movw	r30, r24
 76a:	20 83       	st	Z, r18
 76c:	0b be       	out	0x3b, r0	; 59
	}
	return ADCB.CH1.RES;
 76e:	80 e4       	ldi	r24, 0x40	; 64
 770:	92 e0       	ldi	r25, 0x02	; 2
 772:	fc 01       	movw	r30, r24
 774:	84 a5       	ldd	r24, Z+44	; 0x2c
 776:	95 a5       	ldd	r25, Z+45	; 0x2d
}
 778:	28 96       	adiw	r28, 0x08	; 8
 77a:	cd bf       	out	0x3d, r28	; 61
 77c:	de bf       	out	0x3e, r29	; 62
 77e:	df 91       	pop	r29
 780:	cf 91       	pop	r28
 782:	08 95       	ret

00000784 <rough_delay>:

void rough_delay(void)
{
 784:	cf 93       	push	r28
 786:	df 93       	push	r29
 788:	1f 92       	push	r1
 78a:	1f 92       	push	r1
 78c:	cd b7       	in	r28, 0x3d	; 61
 78e:	de b7       	in	r29, 0x3e	; 62
	for (int i = 0; i < 15000; i++)
 790:	19 82       	std	Y+1, r1	; 0x01
 792:	1a 82       	std	Y+2, r1	; 0x02
 794:	06 c0       	rjmp	.+12     	; 0x7a2 <rough_delay+0x1e>
	{
		asm volatile ("nop");
 796:	00 00       	nop
	return ADCB.CH1.RES;
}

void rough_delay(void)
{
	for (int i = 0; i < 15000; i++)
 798:	89 81       	ldd	r24, Y+1	; 0x01
 79a:	9a 81       	ldd	r25, Y+2	; 0x02
 79c:	01 96       	adiw	r24, 0x01	; 1
 79e:	89 83       	std	Y+1, r24	; 0x01
 7a0:	9a 83       	std	Y+2, r25	; 0x02
 7a2:	89 81       	ldd	r24, Y+1	; 0x01
 7a4:	9a 81       	ldd	r25, Y+2	; 0x02
 7a6:	88 39       	cpi	r24, 0x98	; 152
 7a8:	9a 43       	sbci	r25, 0x3A	; 58
 7aa:	ac f3       	brlt	.-22     	; 0x796 <rough_delay+0x12>
	{
		asm volatile ("nop");
	}
 7ac:	0f 90       	pop	r0
 7ae:	0f 90       	pop	r0
 7b0:	df 91       	pop	r29
 7b2:	cf 91       	pop	r28
 7b4:	08 95       	ret

000007b6 <__subsf3>:
 7b6:	50 58       	subi	r21, 0x80	; 128

000007b8 <__addsf3>:
 7b8:	bb 27       	eor	r27, r27
 7ba:	aa 27       	eor	r26, r26
 7bc:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <__addsf3x>
 7c0:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_round>
 7c4:	0e 94 bd 04 	call	0x97a	; 0x97a <__fp_pscA>
 7c8:	38 f0       	brcs	.+14     	; 0x7d8 <__addsf3+0x20>
 7ca:	0e 94 c4 04 	call	0x988	; 0x988 <__fp_pscB>
 7ce:	20 f0       	brcs	.+8      	; 0x7d8 <__addsf3+0x20>
 7d0:	39 f4       	brne	.+14     	; 0x7e0 <__addsf3+0x28>
 7d2:	9f 3f       	cpi	r25, 0xFF	; 255
 7d4:	19 f4       	brne	.+6      	; 0x7dc <__addsf3+0x24>
 7d6:	26 f4       	brtc	.+8      	; 0x7e0 <__addsf3+0x28>
 7d8:	0c 94 ba 04 	jmp	0x974	; 0x974 <__fp_nan>
 7dc:	0e f4       	brtc	.+2      	; 0x7e0 <__addsf3+0x28>
 7de:	e0 95       	com	r30
 7e0:	e7 fb       	bst	r30, 7
 7e2:	0c 94 b4 04 	jmp	0x968	; 0x968 <__fp_inf>

000007e6 <__addsf3x>:
 7e6:	e9 2f       	mov	r30, r25
 7e8:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__fp_split3>
 7ec:	58 f3       	brcs	.-42     	; 0x7c4 <__addsf3+0xc>
 7ee:	ba 17       	cp	r27, r26
 7f0:	62 07       	cpc	r22, r18
 7f2:	73 07       	cpc	r23, r19
 7f4:	84 07       	cpc	r24, r20
 7f6:	95 07       	cpc	r25, r21
 7f8:	20 f0       	brcs	.+8      	; 0x802 <__addsf3x+0x1c>
 7fa:	79 f4       	brne	.+30     	; 0x81a <__addsf3x+0x34>
 7fc:	a6 f5       	brtc	.+104    	; 0x866 <__addsf3x+0x80>
 7fe:	0c 94 fe 04 	jmp	0x9fc	; 0x9fc <__fp_zero>
 802:	0e f4       	brtc	.+2      	; 0x806 <__addsf3x+0x20>
 804:	e0 95       	com	r30
 806:	0b 2e       	mov	r0, r27
 808:	ba 2f       	mov	r27, r26
 80a:	a0 2d       	mov	r26, r0
 80c:	0b 01       	movw	r0, r22
 80e:	b9 01       	movw	r22, r18
 810:	90 01       	movw	r18, r0
 812:	0c 01       	movw	r0, r24
 814:	ca 01       	movw	r24, r20
 816:	a0 01       	movw	r20, r0
 818:	11 24       	eor	r1, r1
 81a:	ff 27       	eor	r31, r31
 81c:	59 1b       	sub	r21, r25
 81e:	99 f0       	breq	.+38     	; 0x846 <__addsf3x+0x60>
 820:	59 3f       	cpi	r21, 0xF9	; 249
 822:	50 f4       	brcc	.+20     	; 0x838 <__addsf3x+0x52>
 824:	50 3e       	cpi	r21, 0xE0	; 224
 826:	68 f1       	brcs	.+90     	; 0x882 <__addsf3x+0x9c>
 828:	1a 16       	cp	r1, r26
 82a:	f0 40       	sbci	r31, 0x00	; 0
 82c:	a2 2f       	mov	r26, r18
 82e:	23 2f       	mov	r18, r19
 830:	34 2f       	mov	r19, r20
 832:	44 27       	eor	r20, r20
 834:	58 5f       	subi	r21, 0xF8	; 248
 836:	f3 cf       	rjmp	.-26     	; 0x81e <__addsf3x+0x38>
 838:	46 95       	lsr	r20
 83a:	37 95       	ror	r19
 83c:	27 95       	ror	r18
 83e:	a7 95       	ror	r26
 840:	f0 40       	sbci	r31, 0x00	; 0
 842:	53 95       	inc	r21
 844:	c9 f7       	brne	.-14     	; 0x838 <__addsf3x+0x52>
 846:	7e f4       	brtc	.+30     	; 0x866 <__addsf3x+0x80>
 848:	1f 16       	cp	r1, r31
 84a:	ba 0b       	sbc	r27, r26
 84c:	62 0b       	sbc	r22, r18
 84e:	73 0b       	sbc	r23, r19
 850:	84 0b       	sbc	r24, r20
 852:	ba f0       	brmi	.+46     	; 0x882 <__addsf3x+0x9c>
 854:	91 50       	subi	r25, 0x01	; 1
 856:	a1 f0       	breq	.+40     	; 0x880 <__addsf3x+0x9a>
 858:	ff 0f       	add	r31, r31
 85a:	bb 1f       	adc	r27, r27
 85c:	66 1f       	adc	r22, r22
 85e:	77 1f       	adc	r23, r23
 860:	88 1f       	adc	r24, r24
 862:	c2 f7       	brpl	.-16     	; 0x854 <__addsf3x+0x6e>
 864:	0e c0       	rjmp	.+28     	; 0x882 <__addsf3x+0x9c>
 866:	ba 0f       	add	r27, r26
 868:	62 1f       	adc	r22, r18
 86a:	73 1f       	adc	r23, r19
 86c:	84 1f       	adc	r24, r20
 86e:	48 f4       	brcc	.+18     	; 0x882 <__addsf3x+0x9c>
 870:	87 95       	ror	r24
 872:	77 95       	ror	r23
 874:	67 95       	ror	r22
 876:	b7 95       	ror	r27
 878:	f7 95       	ror	r31
 87a:	9e 3f       	cpi	r25, 0xFE	; 254
 87c:	08 f0       	brcs	.+2      	; 0x880 <__addsf3x+0x9a>
 87e:	b0 cf       	rjmp	.-160    	; 0x7e0 <__addsf3+0x28>
 880:	93 95       	inc	r25
 882:	88 0f       	add	r24, r24
 884:	08 f0       	brcs	.+2      	; 0x888 <__addsf3x+0xa2>
 886:	99 27       	eor	r25, r25
 888:	ee 0f       	add	r30, r30
 88a:	97 95       	ror	r25
 88c:	87 95       	ror	r24
 88e:	08 95       	ret

00000890 <__fixunssfsi>:
 890:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <__fp_splitA>
 894:	88 f0       	brcs	.+34     	; 0x8b8 <__fixunssfsi+0x28>
 896:	9f 57       	subi	r25, 0x7F	; 127
 898:	98 f0       	brcs	.+38     	; 0x8c0 <__fixunssfsi+0x30>
 89a:	b9 2f       	mov	r27, r25
 89c:	99 27       	eor	r25, r25
 89e:	b7 51       	subi	r27, 0x17	; 23
 8a0:	b0 f0       	brcs	.+44     	; 0x8ce <__fixunssfsi+0x3e>
 8a2:	e1 f0       	breq	.+56     	; 0x8dc <__fixunssfsi+0x4c>
 8a4:	66 0f       	add	r22, r22
 8a6:	77 1f       	adc	r23, r23
 8a8:	88 1f       	adc	r24, r24
 8aa:	99 1f       	adc	r25, r25
 8ac:	1a f0       	brmi	.+6      	; 0x8b4 <__fixunssfsi+0x24>
 8ae:	ba 95       	dec	r27
 8b0:	c9 f7       	brne	.-14     	; 0x8a4 <__fixunssfsi+0x14>
 8b2:	14 c0       	rjmp	.+40     	; 0x8dc <__fixunssfsi+0x4c>
 8b4:	b1 30       	cpi	r27, 0x01	; 1
 8b6:	91 f0       	breq	.+36     	; 0x8dc <__fixunssfsi+0x4c>
 8b8:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fp_zero>
 8bc:	b1 e0       	ldi	r27, 0x01	; 1
 8be:	08 95       	ret
 8c0:	0c 94 fe 04 	jmp	0x9fc	; 0x9fc <__fp_zero>
 8c4:	67 2f       	mov	r22, r23
 8c6:	78 2f       	mov	r23, r24
 8c8:	88 27       	eor	r24, r24
 8ca:	b8 5f       	subi	r27, 0xF8	; 248
 8cc:	39 f0       	breq	.+14     	; 0x8dc <__fixunssfsi+0x4c>
 8ce:	b9 3f       	cpi	r27, 0xF9	; 249
 8d0:	cc f3       	brlt	.-14     	; 0x8c4 <__fixunssfsi+0x34>
 8d2:	86 95       	lsr	r24
 8d4:	77 95       	ror	r23
 8d6:	67 95       	ror	r22
 8d8:	b3 95       	inc	r27
 8da:	d9 f7       	brne	.-10     	; 0x8d2 <__fixunssfsi+0x42>
 8dc:	3e f4       	brtc	.+14     	; 0x8ec <__fixunssfsi+0x5c>
 8de:	90 95       	com	r25
 8e0:	80 95       	com	r24
 8e2:	70 95       	com	r23
 8e4:	61 95       	neg	r22
 8e6:	7f 4f       	sbci	r23, 0xFF	; 255
 8e8:	8f 4f       	sbci	r24, 0xFF	; 255
 8ea:	9f 4f       	sbci	r25, 0xFF	; 255
 8ec:	08 95       	ret

000008ee <__floatunsisf>:
 8ee:	e8 94       	clt
 8f0:	09 c0       	rjmp	.+18     	; 0x904 <__floatsisf+0x12>

000008f2 <__floatsisf>:
 8f2:	97 fb       	bst	r25, 7
 8f4:	3e f4       	brtc	.+14     	; 0x904 <__floatsisf+0x12>
 8f6:	90 95       	com	r25
 8f8:	80 95       	com	r24
 8fa:	70 95       	com	r23
 8fc:	61 95       	neg	r22
 8fe:	7f 4f       	sbci	r23, 0xFF	; 255
 900:	8f 4f       	sbci	r24, 0xFF	; 255
 902:	9f 4f       	sbci	r25, 0xFF	; 255
 904:	99 23       	and	r25, r25
 906:	a9 f0       	breq	.+42     	; 0x932 <__floatsisf+0x40>
 908:	f9 2f       	mov	r31, r25
 90a:	96 e9       	ldi	r25, 0x96	; 150
 90c:	bb 27       	eor	r27, r27
 90e:	93 95       	inc	r25
 910:	f6 95       	lsr	r31
 912:	87 95       	ror	r24
 914:	77 95       	ror	r23
 916:	67 95       	ror	r22
 918:	b7 95       	ror	r27
 91a:	f1 11       	cpse	r31, r1
 91c:	f8 cf       	rjmp	.-16     	; 0x90e <__floatsisf+0x1c>
 91e:	fa f4       	brpl	.+62     	; 0x95e <__floatsisf+0x6c>
 920:	bb 0f       	add	r27, r27
 922:	11 f4       	brne	.+4      	; 0x928 <__floatsisf+0x36>
 924:	60 ff       	sbrs	r22, 0
 926:	1b c0       	rjmp	.+54     	; 0x95e <__floatsisf+0x6c>
 928:	6f 5f       	subi	r22, 0xFF	; 255
 92a:	7f 4f       	sbci	r23, 0xFF	; 255
 92c:	8f 4f       	sbci	r24, 0xFF	; 255
 92e:	9f 4f       	sbci	r25, 0xFF	; 255
 930:	16 c0       	rjmp	.+44     	; 0x95e <__floatsisf+0x6c>
 932:	88 23       	and	r24, r24
 934:	11 f0       	breq	.+4      	; 0x93a <__floatsisf+0x48>
 936:	96 e9       	ldi	r25, 0x96	; 150
 938:	11 c0       	rjmp	.+34     	; 0x95c <__floatsisf+0x6a>
 93a:	77 23       	and	r23, r23
 93c:	21 f0       	breq	.+8      	; 0x946 <__floatsisf+0x54>
 93e:	9e e8       	ldi	r25, 0x8E	; 142
 940:	87 2f       	mov	r24, r23
 942:	76 2f       	mov	r23, r22
 944:	05 c0       	rjmp	.+10     	; 0x950 <__floatsisf+0x5e>
 946:	66 23       	and	r22, r22
 948:	71 f0       	breq	.+28     	; 0x966 <__floatsisf+0x74>
 94a:	96 e8       	ldi	r25, 0x86	; 134
 94c:	86 2f       	mov	r24, r22
 94e:	70 e0       	ldi	r23, 0x00	; 0
 950:	60 e0       	ldi	r22, 0x00	; 0
 952:	2a f0       	brmi	.+10     	; 0x95e <__floatsisf+0x6c>
 954:	9a 95       	dec	r25
 956:	66 0f       	add	r22, r22
 958:	77 1f       	adc	r23, r23
 95a:	88 1f       	adc	r24, r24
 95c:	da f7       	brpl	.-10     	; 0x954 <__floatsisf+0x62>
 95e:	88 0f       	add	r24, r24
 960:	96 95       	lsr	r25
 962:	87 95       	ror	r24
 964:	97 f9       	bld	r25, 7
 966:	08 95       	ret

00000968 <__fp_inf>:
 968:	97 f9       	bld	r25, 7
 96a:	9f 67       	ori	r25, 0x7F	; 127
 96c:	80 e8       	ldi	r24, 0x80	; 128
 96e:	70 e0       	ldi	r23, 0x00	; 0
 970:	60 e0       	ldi	r22, 0x00	; 0
 972:	08 95       	ret

00000974 <__fp_nan>:
 974:	9f ef       	ldi	r25, 0xFF	; 255
 976:	80 ec       	ldi	r24, 0xC0	; 192
 978:	08 95       	ret

0000097a <__fp_pscA>:
 97a:	00 24       	eor	r0, r0
 97c:	0a 94       	dec	r0
 97e:	16 16       	cp	r1, r22
 980:	17 06       	cpc	r1, r23
 982:	18 06       	cpc	r1, r24
 984:	09 06       	cpc	r0, r25
 986:	08 95       	ret

00000988 <__fp_pscB>:
 988:	00 24       	eor	r0, r0
 98a:	0a 94       	dec	r0
 98c:	12 16       	cp	r1, r18
 98e:	13 06       	cpc	r1, r19
 990:	14 06       	cpc	r1, r20
 992:	05 06       	cpc	r0, r21
 994:	08 95       	ret

00000996 <__fp_round>:
 996:	09 2e       	mov	r0, r25
 998:	03 94       	inc	r0
 99a:	00 0c       	add	r0, r0
 99c:	11 f4       	brne	.+4      	; 0x9a2 <__fp_round+0xc>
 99e:	88 23       	and	r24, r24
 9a0:	52 f0       	brmi	.+20     	; 0x9b6 <__fp_round+0x20>
 9a2:	bb 0f       	add	r27, r27
 9a4:	40 f4       	brcc	.+16     	; 0x9b6 <__fp_round+0x20>
 9a6:	bf 2b       	or	r27, r31
 9a8:	11 f4       	brne	.+4      	; 0x9ae <__fp_round+0x18>
 9aa:	60 ff       	sbrs	r22, 0
 9ac:	04 c0       	rjmp	.+8      	; 0x9b6 <__fp_round+0x20>
 9ae:	6f 5f       	subi	r22, 0xFF	; 255
 9b0:	7f 4f       	sbci	r23, 0xFF	; 255
 9b2:	8f 4f       	sbci	r24, 0xFF	; 255
 9b4:	9f 4f       	sbci	r25, 0xFF	; 255
 9b6:	08 95       	ret

000009b8 <__fp_split3>:
 9b8:	57 fd       	sbrc	r21, 7
 9ba:	90 58       	subi	r25, 0x80	; 128
 9bc:	44 0f       	add	r20, r20
 9be:	55 1f       	adc	r21, r21
 9c0:	59 f0       	breq	.+22     	; 0x9d8 <__fp_splitA+0x10>
 9c2:	5f 3f       	cpi	r21, 0xFF	; 255
 9c4:	71 f0       	breq	.+28     	; 0x9e2 <__fp_splitA+0x1a>
 9c6:	47 95       	ror	r20

000009c8 <__fp_splitA>:
 9c8:	88 0f       	add	r24, r24
 9ca:	97 fb       	bst	r25, 7
 9cc:	99 1f       	adc	r25, r25
 9ce:	61 f0       	breq	.+24     	; 0x9e8 <__fp_splitA+0x20>
 9d0:	9f 3f       	cpi	r25, 0xFF	; 255
 9d2:	79 f0       	breq	.+30     	; 0x9f2 <__fp_splitA+0x2a>
 9d4:	87 95       	ror	r24
 9d6:	08 95       	ret
 9d8:	12 16       	cp	r1, r18
 9da:	13 06       	cpc	r1, r19
 9dc:	14 06       	cpc	r1, r20
 9de:	55 1f       	adc	r21, r21
 9e0:	f2 cf       	rjmp	.-28     	; 0x9c6 <__fp_split3+0xe>
 9e2:	46 95       	lsr	r20
 9e4:	f1 df       	rcall	.-30     	; 0x9c8 <__fp_splitA>
 9e6:	08 c0       	rjmp	.+16     	; 0x9f8 <__fp_splitA+0x30>
 9e8:	16 16       	cp	r1, r22
 9ea:	17 06       	cpc	r1, r23
 9ec:	18 06       	cpc	r1, r24
 9ee:	99 1f       	adc	r25, r25
 9f0:	f1 cf       	rjmp	.-30     	; 0x9d4 <__fp_splitA+0xc>
 9f2:	86 95       	lsr	r24
 9f4:	71 05       	cpc	r23, r1
 9f6:	61 05       	cpc	r22, r1
 9f8:	08 94       	sec
 9fa:	08 95       	ret

000009fc <__fp_zero>:
 9fc:	e8 94       	clt

000009fe <__fp_szero>:
 9fe:	bb 27       	eor	r27, r27
 a00:	66 27       	eor	r22, r22
 a02:	77 27       	eor	r23, r23
 a04:	cb 01       	movw	r24, r22
 a06:	97 f9       	bld	r25, 7
 a08:	08 95       	ret

00000a0a <__mulsf3>:
 a0a:	0e 94 18 05 	call	0xa30	; 0xa30 <__mulsf3x>
 a0e:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_round>
 a12:	0e 94 bd 04 	call	0x97a	; 0x97a <__fp_pscA>
 a16:	38 f0       	brcs	.+14     	; 0xa26 <__mulsf3+0x1c>
 a18:	0e 94 c4 04 	call	0x988	; 0x988 <__fp_pscB>
 a1c:	20 f0       	brcs	.+8      	; 0xa26 <__mulsf3+0x1c>
 a1e:	95 23       	and	r25, r21
 a20:	11 f0       	breq	.+4      	; 0xa26 <__mulsf3+0x1c>
 a22:	0c 94 b4 04 	jmp	0x968	; 0x968 <__fp_inf>
 a26:	0c 94 ba 04 	jmp	0x974	; 0x974 <__fp_nan>
 a2a:	11 24       	eor	r1, r1
 a2c:	0c 94 ff 04 	jmp	0x9fe	; 0x9fe <__fp_szero>

00000a30 <__mulsf3x>:
 a30:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__fp_split3>
 a34:	70 f3       	brcs	.-36     	; 0xa12 <__mulsf3+0x8>

00000a36 <__mulsf3_pse>:
 a36:	95 9f       	mul	r25, r21
 a38:	c1 f3       	breq	.-16     	; 0xa2a <__mulsf3+0x20>
 a3a:	95 0f       	add	r25, r21
 a3c:	50 e0       	ldi	r21, 0x00	; 0
 a3e:	55 1f       	adc	r21, r21
 a40:	62 9f       	mul	r22, r18
 a42:	f0 01       	movw	r30, r0
 a44:	72 9f       	mul	r23, r18
 a46:	bb 27       	eor	r27, r27
 a48:	f0 0d       	add	r31, r0
 a4a:	b1 1d       	adc	r27, r1
 a4c:	63 9f       	mul	r22, r19
 a4e:	aa 27       	eor	r26, r26
 a50:	f0 0d       	add	r31, r0
 a52:	b1 1d       	adc	r27, r1
 a54:	aa 1f       	adc	r26, r26
 a56:	64 9f       	mul	r22, r20
 a58:	66 27       	eor	r22, r22
 a5a:	b0 0d       	add	r27, r0
 a5c:	a1 1d       	adc	r26, r1
 a5e:	66 1f       	adc	r22, r22
 a60:	82 9f       	mul	r24, r18
 a62:	22 27       	eor	r18, r18
 a64:	b0 0d       	add	r27, r0
 a66:	a1 1d       	adc	r26, r1
 a68:	62 1f       	adc	r22, r18
 a6a:	73 9f       	mul	r23, r19
 a6c:	b0 0d       	add	r27, r0
 a6e:	a1 1d       	adc	r26, r1
 a70:	62 1f       	adc	r22, r18
 a72:	83 9f       	mul	r24, r19
 a74:	a0 0d       	add	r26, r0
 a76:	61 1d       	adc	r22, r1
 a78:	22 1f       	adc	r18, r18
 a7a:	74 9f       	mul	r23, r20
 a7c:	33 27       	eor	r19, r19
 a7e:	a0 0d       	add	r26, r0
 a80:	61 1d       	adc	r22, r1
 a82:	23 1f       	adc	r18, r19
 a84:	84 9f       	mul	r24, r20
 a86:	60 0d       	add	r22, r0
 a88:	21 1d       	adc	r18, r1
 a8a:	82 2f       	mov	r24, r18
 a8c:	76 2f       	mov	r23, r22
 a8e:	6a 2f       	mov	r22, r26
 a90:	11 24       	eor	r1, r1
 a92:	9f 57       	subi	r25, 0x7F	; 127
 a94:	50 40       	sbci	r21, 0x00	; 0
 a96:	9a f0       	brmi	.+38     	; 0xabe <__mulsf3_pse+0x88>
 a98:	f1 f0       	breq	.+60     	; 0xad6 <__mulsf3_pse+0xa0>
 a9a:	88 23       	and	r24, r24
 a9c:	4a f0       	brmi	.+18     	; 0xab0 <__mulsf3_pse+0x7a>
 a9e:	ee 0f       	add	r30, r30
 aa0:	ff 1f       	adc	r31, r31
 aa2:	bb 1f       	adc	r27, r27
 aa4:	66 1f       	adc	r22, r22
 aa6:	77 1f       	adc	r23, r23
 aa8:	88 1f       	adc	r24, r24
 aaa:	91 50       	subi	r25, 0x01	; 1
 aac:	50 40       	sbci	r21, 0x00	; 0
 aae:	a9 f7       	brne	.-22     	; 0xa9a <__mulsf3_pse+0x64>
 ab0:	9e 3f       	cpi	r25, 0xFE	; 254
 ab2:	51 05       	cpc	r21, r1
 ab4:	80 f0       	brcs	.+32     	; 0xad6 <__mulsf3_pse+0xa0>
 ab6:	0c 94 b4 04 	jmp	0x968	; 0x968 <__fp_inf>
 aba:	0c 94 ff 04 	jmp	0x9fe	; 0x9fe <__fp_szero>
 abe:	5f 3f       	cpi	r21, 0xFF	; 255
 ac0:	e4 f3       	brlt	.-8      	; 0xaba <__mulsf3_pse+0x84>
 ac2:	98 3e       	cpi	r25, 0xE8	; 232
 ac4:	d4 f3       	brlt	.-12     	; 0xaba <__mulsf3_pse+0x84>
 ac6:	86 95       	lsr	r24
 ac8:	77 95       	ror	r23
 aca:	67 95       	ror	r22
 acc:	b7 95       	ror	r27
 ace:	f7 95       	ror	r31
 ad0:	e7 95       	ror	r30
 ad2:	9f 5f       	subi	r25, 0xFF	; 255
 ad4:	c1 f7       	brne	.-16     	; 0xac6 <__mulsf3_pse+0x90>
 ad6:	fe 2b       	or	r31, r30
 ad8:	88 0f       	add	r24, r24
 ada:	91 1d       	adc	r25, r1
 adc:	96 95       	lsr	r25
 ade:	87 95       	ror	r24
 ae0:	97 f9       	bld	r25, 7
 ae2:	08 95       	ret

00000ae4 <_exit>:
 ae4:	f8 94       	cli

00000ae6 <__stop_program>:
 ae6:	ff cf       	rjmp	.-2      	; 0xae6 <__stop_program>
